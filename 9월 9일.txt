부트스트랩의 그리드 시스템

<div class="container">

</div>

컨테이너
	- 하나의 웹 페이지는 컨테이너가 하나만 있는 게 권장됨.
	- 부트스트랩의 가장 기본적인 레이아웃 요소다.
	- 그리드 시스템을 이용해서 화면의 레이아웃을 구성할 때 필요하다.
	- 컨테이너는 화면의 종단점에 따라서 정해진 최대 너비를 가진다.
		.container
			화면의 종단점에 따라서 정해진 최대 너비를 가진다.
			화면의 중앙에 위치하고, 좌우 같은 크기의 너비를 가진다.
		.container-fluid
			모든 종단점에서 화면의 100% 너비를 가진다.

그리드
	- 12개의 열 시스템, 6개의 기본 반응형 계층을 이용해서 화면의 레이아웃을 구성하도록 지원하는 시스템
	- 부트스트랩에서는 컨테이너, 행, 열을 사용하여 레이아웃을 구성하고 정렬할 수 있다.
	- 작동원리
		+ 컨테이너는 컨텐츠를 화면의 중앙에 위치시킨다.
		+ 행은 열을 감싼다.
			<div class="row">
				<div class="col-x">컨텐츠</div>
				<div class="col-x">컨텐츠</div>
			</div>
		+ 행은 컨텐츠를 직접 포함할 수 없다.
			잘못사용한 예)
			<div class="row">
				<a href="">링크</a>
			</div>
		+ 컨텐츠를 직접 포함하는 것은 언제나 열이다.	
			<div class="row">
				<table>
				</table>
			</div>
		+ 열은 매우 유연하다.
			* 행당 12개의 열을 사용할 수 있다.
			* 여러 열에 걸쳐있는 다양한 요소 조합을 만들 수 있다.
			* 열 클래스에서 열의 갯수를 지정하면 해당 갯수만큼 열이 확장된다.
			* 행에 포함된 열의 크기가 12를 초과하면 해당 열은 다음 행에 표시된다.
			* 하나의 행에 열의 크기를 정하지 않고 열을 나열하면 같은 너비의 열이 된다.
			
프로젝트 진행 과정
1. 기획
 - 요구사항 분석 : 협업 담당자와 함께 개발할 시스템의 요구사항을 분석한다.
 - WBS 작성 : 전체 개발일정 상세 계획 수립 및 WBS(Work breakdown structure) 작성
 - 업무프로세스 정의 : 정의된 기능에 대한 업무 프로세스 회의
 - 화면 기획 : 실제 프로그램을 개발하기 위한 스토리보드 작성
2. 디자인	
 - 디자인 컨셉 확인
 - 디자인 시안 작업
 - 시안 확정 및 디자인
 - 전체 화면 디자인
3. 퍼블리싱
 - 퍼블리싱 일정 수립
 - 디자이너가 작업해 준 디자인 화면(포토샵파일)을 개발자가 개발할 수 있도록 퍼블리싱(HTML 파일)
4. 개발
 - (사전) 서버 네트워크 환경 구성 : 현업 인프라 담당자와 협의해서 서버 네트워크 환경을 구성한다.
 - (사전) 개발 환경 구축 : 개발툴, 프레임워크, 라이브러리를 확정하고, 전체 시스템에 대한 기본 설계 및
                         개발환경을 구축한다.
 - (사전) 데이터베이스 구현 : 기획에서 정의한 업무프로세스와 화면기획을 바탕으로 ERD를 작성하고
                            테이블 생성, 기본 데이터저장 등의 작업을 수행한다.
 - 개발 : 개발 일정에 맞춰서 실제 개발작업을 진행한다.
5. 테스트
 - 테스트 케이스 작성
 - 테스트 시나리오 작성
 - 단위테스트 수행 및 보완 : 단위테스트는 각 단위 기능에 대한 테스트를 진행한다.
 - 통합테스트 수행 및 보완 : 단위테스트가 완료되면 전체 프로세스의 흐름을 통합하여 통합테스트를 진행한다.
6. 오픈 및 안정화 
 - 사전 교육
 - 오픈 준비
 - 시스템 오픈
 - 시스템 안정화