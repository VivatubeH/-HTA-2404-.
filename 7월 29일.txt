정규화
- 데이터의 이상현상을 방지하기 위해서 테이블을 분해하는 작업이다.
- 정규화는 각 단계별로 충족시켜야 되는 조건이 있다.
- 정규화의 단계가 높아질수록 테이블은 잘 분해되어 있고, 이상현상을 방지할 수 있다.

제 1 정규형
- 각 컬럼은 하나의 값을 가져야 한다.
- 테이블 내의 속성값(컬럼값)은 "원자값"을 가지고 있어야 한다.

제 2 정규형
- 테이블 내의 모든 컬럼이 "완전 함수 종속"이어야 한다.
- 완전 함수 종속은 테이블 내의 컬럼이 기본키의 모든 속성에 의존하는 것이다.
- 테이블 내에서 부분 함수 종속을 제거하는 것이다.

- "부분 함수 종속"은 테이블내에서 기본키를 구성하는 복합키의 일부 컬럼에 의존하는 컬럼이 존재하는 것이다.
- 기본키가 아닌 속성들이 기본키에 완전 함수 종속되지 못하고 부분 함수종속됨.
[ 기본키의 일부 속성에만 의존함 ]



[예시]
학번, 과목번호, 성적, 담당교수, 학과 등이 있을 때
학번, 과목번호라는 기본키에 의해 성적이 결정됨. ( 완전 함수적 종속 )
학번, 과목번호 중 학번이라는 기본키에 의해서만 담당교수가 결정됨. ( 부분 함수적 종속 )

---------------------------------------------------------------------------------
삽입 이상 (Insertion Anomaly) : 데이터 삽입 시 의도와 다른 값들도 삽입
삭제 이상 (Delete Anomaly) : 데이터 삭제 시 의도와 다른 값들도 연쇄 삭제
갱신 이상 (Update Anomaly) : 속성값 갱신 시 일부 튜플만 갱신되어 모순 발생

---------------------------------------------------------------------------------
학번	과목번호	성적	담당교수
100	C001		A 	김교수
100 	C002		A	김교수
101	C001		B	박교수
101	C003		C	박교수

부분함수 종속일 때 발생하는 이상현상

삽입이상 - 학생이 새 과목을 신청할 때, 반드시 담당교수를 알아야 한다. (불필요한 정보)
삭제이상 - 101번 학생이 C003 과목을 수강취소하면 해당 과목에 대한 모든 정보가 삭제된다.
갱신이상 - 100번 학생의 담당교수를 변경할 때 김교수를 전부 찾아서 변경해야 한다.

---------------------------------------------------------------------------------

사원아이디	사원이름	소속부서아이디	    부서명
100		홍길동		10		    총무부
101		김유신		10		    총무부
102		강감찬		20		    영업부
103		이순신		20		    영업부
104		류관순		30		    홍보부

사원아이디 -> 소속부서아이디
100번 사원은 10번 부서에 소속되어 있다.

소속부서아이디 -> 부서명
10번 부서의 부서명은 총무부다.

사원아이디 -> 부서명
100번 사원이 소속된 부서의 부서명은 총무부다.

[ 사원에 따라 소속부서가 달라지고, 소속부서 아이디에 따라 부서명이 달라짐 ]
[A -> B, B -> C인데 A->C인 이행 종속이 발생함. 제 3 정규형에서는 이러한 이행적 함수 종속을 제거해야 함 ]

위의 테이블에선 기본키를 제외한 컬럼에서 이행종속 관계 [ a->b, b->c, a->c ]가 존재한다.

테이블에 이행종속관계가 존재하는 경우 발생되는 이상현상
- 삽입이상 : 사원의 정보를 등록할 때 소속부서아이디와 부서명을 같이 등록해야 한다.
- 삭제이상 : 10번 부서의 부서명이 변경될 때 모든 10번 부서를 찾아서 변경해야 한다. 
- 갱신이상 : 104번 사원이 퇴사하면 홍보부 부서정보가 삭제된다.
-----------------------------------------------------------------------------------------

제 3 정규화 : 기본키가 아닌 컬럼에서 이행 종속을 제거하는 것. [ a - > b, b - > c, a - > c 를 제거하는 것. ]

- "부분 함수 종속"은 테이블내에서 기본키가 아닌 속성들이 기본키의 부분집합에 
제1정규형에서 이상이 발생하는 이유
- 기본키가 아닌 속성들이 기본키에 완전 함수 종속되지 못하고 부분 함수종속됨.
[ 기본키의 일부 속성에만 의존함 ]


------------------------------------------------------------------------------------------

데이터 모델링 
- 정보시스템을 구축할 때 어떤 데이터가 존재하는지, 실제 업무에 필요한 정보가 무엇인지
  분석하는 작업
- 실제 데이터베이스를 생성하고 관리하기 위해서 구축대상이 되는 업무 내용을
  분석하고 다이어그램으로 표현하는 작업

- 데이터 모델링 절차
   	1. 요구사항 수집 및 분석 - 업무파악
		+ 정보시스템 구축 대상이 되는 업무를 파악한다.
		+ 업무를 파악할 때는 스토리 보드와 같은 산출물을 이용하는 것이 좋다.
		+ 해당 업무에서 어떤 정보를 데이터화 해야 하는지 파악해야 한다.
		+ 커뮤니티 게시판 프로젝트 구축
			* 데이터화할 정보
					사용자
					게시글
					댓글
					추천수
					

   	2. 설계 		- 데이터 모델링
		+ 개념적 모델링 
			* 데이터의 속성과 관계를 파악하는 단계다.
			* 각 데이터의 기본키, 속성을 파악한다.
			* 데이터간의 관계를 파악한다.
			* 파악한 내용을 ERD 다이어그램으로 표현한다.
		+ 논리적 모델링 
			* 데이터의 모델을 작성하는 단계다.
			* 업무마다 데이터의 키를 정의하고, 속성에 대한 상세한 정보를 정의한다.
			* 속성에 대한 구체적인 데이터타입을 정의한다.
			* 필요한 경우 정규화 작업을 수행한다.
			* 데이터간의 관계를 정밀하게 표시한다.
			* 파악한 내용을 ERD 다이어그램으로 표현한다.
		+ 물리적 모델링
			* 논리적 모델링을 바탕으로 데이터를 실제로 관리할 데이터베이스를 선택하고,
			선택한 데이터베이스에 실제로 테이블을 생성하는 단계다.
			* ERD를 기준으로 DDL을 생성하고, 생성한 DDL을 데이터베이스에서 실행해서
			데이터를 저장할 테이블을 만든다.
			* 근래에는 ERD를 DDL로 변환할 수 있기 때문에 DDL을 직접 작성할 필요는 없다.

	3. 데이터베이스 구현 - 데이터베이스 생성

커뮤니티 게시판 데이터베이스 모델링
1. 개념 모델링
	엔티티 식별하기
		사용자
		게시글
		댓글
	엔티티의 속성 도출하기	
		사용자
			사용자번호 - 식별자
			아이디
			비밀번호
			이름
			이메일
			등록일
			최종수정일
		게시글
			게시글번호 - 식별자
			제목
			작성자
			내용
			조회수
			삭제여부
			등록일
			최종수정일
		댓글
			댓글번호 - 식별자
			내용
			조회수
			삭제여부
			등록일
			최종수정일
			게시글
			작성자
	엔티티간의 관계 도출하기
		사용자 -> 게시글
			* 사용자는 게시글을 작성한다.
			* 사용자는 게시글을 여러 개 작성할 수 있다.
			* 게시글을 하나도 작성하지 않은 사용자도 있다.
			* 사용자 -> 게시글 = 1 -> 0...N
		게시글 -> 사용자
			* 게시글마다 작성자가 있다.
			* 게시글 -> 사용자 = 1 -> 1
		사용자 -> 댓글
			* 사용자는 댓글을 작성한다.
			* 사용자는 댓글을 여러 개 작성할 수 있다.
			* 댓글을 하나도 작성하지 않은 사용자도 있다.
			* 사용자 -> 댓글 = 1 -> 0...N	
		게시글 -> 댓글
			* 게시글은 여러 개의 댓글을 포함한다.
			* 댓글이 하나도 없는 게시글도 있다.
			* 게시글 -> 댓글 = 1 -> 0...N
		댓글 -> 게시글
			* 댓글마다 게시글 번호가 있다.
			* 댓글 -> 게시글 = 1 -> 1
		댓글 -> 사용자
			* 댓글마다 사용자번호가 있다.

			* 댓글 -> 사용자 = 1 -> 1

[ 사용자 -> 주문 = 1 -> 0...N 
  주문 -> 사용자 = 1 -> 1
  주문 -> 주문상품 = 1 -> 1...N
  주문 -> 배송지 = 1 -> 1
  주문 -> 쿠폰 = 1 -> 0...N
  주문 -> 결제 = 1 -> 1...N ] 
