표현 계층 - 사용자와 상호 작용하는 계층
[ 사용자가 화면에서 입력한 값을 전달받아서 유효성을 체크한다. ( 유효성 체크 )
  사용자가 입력한 값을 객체에 담아서 서비스계층에 전달한다.
  서비스 계층의 업무로직 기능 실행 후 획득한 정보로 컨텐츠를 생성해서 사용자에게 전달한다. ]

서비스 계층 - 핵심 업무로직을 수행하는 계층
[ 실질적인 업무 로직을 수행함 
  표현 계층이 전달한 값을 사용해서 사용자의 요청을 처리한다. 
  표현 계층에서 컨텐츠를 생성할 때 필요한 정보를 제공한다.
  업무 로직을 수행하기 위해서 영속화 계층의 다양한 기능을 사용한다. ]

영속화 계층 - 데이터베이스를 대상으로 CRUD 작업을 수행하는 계층
( Create, Read, Update, Delete )
[ 데이터 조회, 변경, 추가, 삭제 기능을 제공한다. ]

각 계층간은 정보를 표현하는 객체를 전달함으로써, 서로 상호작용함.

기능을 구현하는 객체는 표현 계층, 서비스 계층, 영속화 계층으로 나눌 수 있다.

정보를 표현하는 객체를, Java Beans라고 부름.

자바 빈즈(Java Beans) 
- private 필드 + pulbic getter, setter 메서드 + 기본 생성자
- 자바로 작성한 재사용 가능한 소프트웨어 컴포넌트(Component, 부속품)
- 주로 정보를 표현하는 객체는 자바빈즈 작성규칙에 맞춰서 클래스를 정의한다.
- 작성 규칙
    + 반드시 특정한 패키지에 속해 있어야 한다.
    + 클래스는 기본 생성자를 갖는다.
    + 클래스의 모든 프로퍼티(필드 또는 멤버변수)는 private 접근 제한자를 갖는다.
    + 클래스의 프로퍼티는 Getter/Setter를 통해 조회/변경 할 수 있어야 한다.
	* Getter/Setter 메소드는 public 접근 제한자를 갖는다.
	* Getter 메소드의 이름은 get프로퍼티명이며,
	  Setter 메소드의 이름은 set프로퍼티명이다. 
    	* Getter 메소드는 매개변수가 존재하지 않아야 하며,
       	   Setter 메소드는 하나 이상의 매개변수가 존재해야 한다.
	* Getter 메소드의 반환 타입은 해당 프로퍼티의 타입과 일치하며, 반드시 값을 반환해야 한다.	
	* Setter 메소드의 반환 타입은 언제나 void다.
	* 클래스의 프로퍼티 타입이 boolean 타입인 경우 프로퍼티를 is로 시작해야 한다.   

이클립스 getter/setter 자동 추가 단축키 - alt + shift + s - r 

VO ( Value Object ) - read only 속성을 가짐. [ 리터럴 개념 ]
형태 : db 레코드를 구성하는 필드(컬럼)들을 VO의 attribute로 하고 해당 변수에 
접근할 수 있는 Getter 메서드를 가짐. 주로 getter 메서드만을 가진다.
모든 속성이 같아야 동등하다 판단

DTO ( Data Transfer Object, 데이터 전송 객체 ) [ 인스턴스 개념 ]
: 계층 간 데이터 교환을 하기 위해 사용하는 객체 
주로 getter와 setter를 가지고 있다. ( 불변일 수도, 가변일 수도 있다. )
데이터만을 담고 있고 로직은 포함하지 않는다.
식별자나 핵심 속성이 같으면 동등하다고 판단.

this를 붙이면 변수를 구분할 수 있게 된다. 
this로 접근하는 건 항상 객체의 구성요소가 된다. 
[ 멤버변수와 매개변수명 동일시에 this가 붙어야 멤버변수 ]

우리 클래스에서 비밀번호는 zxcv1234로 통일시켜야 한다....

1. Setter 메소드를 이용해서 객체 초기화하기.
User user1 = new User();
user1.setId("hong");
user1.setName("홍길동");
user1.setPassword("zxcv1234");

2. 생성자 메소드를 이용해서 객체 초기화하기
[ 이렇게 초기화하면 처음 생성자로 초기화한 값을 계속 유지할 수 있음 . ]
[ setter 메소드가 필요없어진다. ]
User user2 = new User("Kim", "김유신", "zxcv1234");

게시글 정보를 표현하는 객체를 클래스로 정의하기
	게시글번호	-정수 int
	게시글제목	-문자열 String
	작성자아이디	-문자열 String
	게시글내용	-문자열 String
	추천갯수		-정수 int
	리뷰갯수		-정수 int
	리뷰평점		-실수 double
	삭제여부		-불린형 boolean
	작성날짜		-날짜 Date <---- java.util.Date import
	수정날짜		-날짜 Date 
	삭제날짜		-날짜 Date
* 클래스명 post
* 멤버변수 정의하기
* 기본 생성자 메소드 정의하기
* Getter/Setter 메소드 정의하기

이클립스 변수명 일괄변경 단축키 - alt + shift + r
boolean 타입은 is나 has 넣어주기.
개수는 count나 cnt로 짓기.

getter, settter 메서드 만들때도 자동완성 기능 이용하자.
[ alt + shift + s - r ]

생성자 만들때도 alt + shift + s로 만들기.

학생 성적정보 관리 프로그램

자바빈즈 - StudentScore.java 학생 성적정보 표현

표현계층 - StudentScoreApp.java 사용자와 상호작용 [ 기능이 구현되어있음 ]
[ 메뉴출력, 학생 성적정보 입력받기 등의 기능이 구현되어 있다. ]

서비스계층+영속화계층 - StudentScoreService.java 성적 정보 관리

메서드 내에서 자기 자신을 호출하는 것도 가능

기존의 멤버변수의 값을 활용해서 새로운 정보를 제공하는 경우 Getter 메소드로
그 기능을 제공할 수 있음.

System.exit()를 사용하면 자바 프로그램이 강제 종료됨. [ 실제로는 잘 안씀 ]

1. 전체 조회 기능
+ 모든 학생의 성적정보를 조회해서 화면에 출력한다.

2. 신규 성적정보 등록 기능
+ 학번, 이름, 국어, 영어, 수학점수를 입력받는다.
입력받은 성적정보를 StudentScore 객체에 담는다
서비스 계층을 담당하는 객체에 StudentScore 객체를 전달해서 db에 저장시킨다.

3. 성적 정보 수정 기능
수정할 학생의 학번을 입력받는다. 수정할 과목과 점수를 입력받는다.
서비스 계층을 담당하는 객체에 학번, 과목, 점수를 전달해서 성적을 수정하게 한다.

4. 성적 정보 삭제 기능
삭제될 학생의 학번을 입력받는다. 서비스 계층을 담당하는 객체에 학번을 전달해서
성적정보를 삭제하게 한다.

의존한다 -> 내가 그 객체를 가지고 있음을 말함. 
[ 내가 의존하는 객체는 내가 가지고 있어야 함 ]
[ 객체를 가지고 있다는 건 필드(속성)에 가지고 있어야 함 ]
[ 내가 사용할 기능이 있는 객체( 의존할 대상 )을 조립해야 함. ]

멤버변수로 만들어야 하는 것 - 여러 메서드에서 사용하는 것.
[ 멤버변수로 조립시 더 넓은 범위에서 사용 가능 ]

표현 계층은 항상 서비스 계층을 사용하고,
서비스 계층은 항상 영속화 계층을 사용한다.
( 계층을 건너뛰지 못한다. )
( 양방향이 아닌 단방향임 )
